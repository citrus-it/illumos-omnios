#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Global test environment used for all tests.
#

# Test root directory
TESTROOT=${TESTROOT:-`pwd`}; export TESTROOT

# make sure we use the correct locale to prevent failures
LC_ALL=C; export LC_ALL

# DNS server for domain information
DNS_SERVER=${DNS_SERVER:-"jurassic.sfbay.sun.com"}; export DNS_SERVER

# Server lease time period default value
LEASE_TIME=${LEASE_TIME:-90}; export LEASE_TIME

DELAY=${DELAY:-300}; export DELAY

# non-global zone path for BASEDIR and MNTPTR
# for Trusted Extensions CIPSO testing.
# For example: ZONE_PATH=/zone/public
#
ZONE_PATH=${ZONE_PATH:-""}; export ZONE_PATH

# BASE (exported) test directory from $SERVER
# Note:
#	For Trusted Extensions CIPSO connections you
#	MUST define a non-global zone's path in ZONE_PATH.
#	For example:
#		ZONE_PATH=/zone/public
#	This would produce the resultant default BASEDIR of:
#		/zone/public/NFSv4Test
#
#As the nfs4test.env is sourced in the runit script, so in order to produce the
#right BASEDIR, the $ZONE_PATH is needed to strip from the $BASEDIR
BASEDIR=${BASEDIR#$ZONE_PATH}
BASEDIR=$ZONE_PATH${BASEDIR:-"/NFSv4Test"}; export BASEDIR

# NOTICEDIR restart/reboot daemon test directory
NOTICEDIR=${NOTICEDIR:-"._Notice__Dir_."}; export NOTICEDIR

# ROOT (exported) test directory from $SERVER
ROOTDIR=${ROOTDIR:-"$BASEDIR/RootFS"}; export ROOTDIR

# PUBLIC (exported) public option test filesystem from $SERVER
PUBTDIR=${PUBTDIR:-"$BASEDIR/PublicFS"}; export PUBTDIR

# ROFS (exported) read-only test filesystem from $SERVER
ROFSDIR=${ROFSDIR:-"$BASEDIR/RoFS"}; export ROFSDIR

# NSPC (exported) test filesystem with no more space from $SERVER
NSPCDIR=${NSPCDIR:-"$BASEDIR/NoSPC_FS"}; export NSPCDIR

# quota (exported) test filesystem from $SERVER
#
# For Trusted Extensions testing.
#
# QUOTADIR must be prefaced with the zone root path
# of the same zone set in ZONE_PATH. QUOTADIR must
# be set prior to executing any test.
#
# The reason to use the zone root here is that
# in most cases, if not all, there will be a small extra
# file system within the non-global zone to be used for
# QUOTA testing.  The non-global's mount point for that
# file system will based upon its zone root path as part
# of the mount point.
#
# For example, if there is an extra ufs file system in a
# non-global zone called "public" and it is mounted
# locally in "public" under /NFSv4Test, then the
# exported directory for QUOTA_FS from the server in this
# example should be set to:
#       QUOTADIR=/zone/public/root/NFSv4Test/QUOTA_FS
#       export QUOTADIR
#
if [[ ! -z $ZONE_PATH ]]; then
        RELDIR=${BASEDIR#$ZONE_PATH}
        QUOTADIR=${QUOTADIR:-"$ZONE_PATH/root$RELDIR/QUOTA_FS"}
else
        QUOTADIR=${QUOTADIR:-"$BASEDIR/QUOTA_FS"}
fi
export QUOTADIR

# KRB5 (exported) test filesystem from $SERVER
KRB5DIR=${KRB5DIR:-"$BASEDIR/KRB5_FS"}; export KRB5DIR

# test filesystems from $SERVER for namespace
SSPCDIR=${SSPCDIR:-"$BASEDIR/SRVsp_FS"}; export SSPCDIR
SSPCDIR2=${SSPCDIR2:-"$SSPCDIR/hide/SRVsp_d2"}; export SSPCDIR2
SSPCDIR3=${SSPCDIR3:-"$SSPCDIR2/hide2/SRVsp_d3"}; export SSPCDIR3

# NotSh (unexported) UFS test filesystem from $SERVER
NOTSHDIR=${NOTSHDIR:-"$BASEDIR/NotShare_FS"}; export NOTSHDIR

# NFS mount options to mount BASEDIR on client
NFSMOPT=${NFSMOPT:-"rw,vers=4"}; export NFSMOPT

# Test users setup in both client and server
#   TUSER1 & TUSER2 are in the same group (10), and TUSER3 is in group (1)
TUSER1=${TUSER1:-"v4test1"}; export TUSER1
TUSER2=${TUSER2:-"v4test2"}; export TUSER2
TUSER3=${TUSER3:-"v4test3"}; export TUSER3
# These users are for uidmapping. TUSERC is only known to the client and 
#	TUSERS is only known to the server
TUSERC=${TUSERC:-"v4testC"}; export TUSERC
TUSERCID="23456780"; export TUSERCID
TUSERC2=${TUSERC2:-"v4testC2"}; export TUSERC2
TUSERS=${TUSERS:-"v4testS"}; export TUSERS
TUSERSID="23456781"; export TUSERSID
TUSERS2=${TUSERS2:-"v4testS2"}; export TUSERS2
TUSERID="23456782"; export TUSERID
TUSERC3=${TUSERC3:-"v4test4"}; export TUSERC3
TUSERS3="$TUSERC3"; export TUSERS3
TUSERCID3="23456783"; export TUSERCID3
TUSERSID3="23456784"; export TUSERSID3
# Special user for uidmapping, with UTF-8 chars of different byte lengths
UTF8_USR="\0176\0337\0200\0357\0200\0200\0367\0200\0200\0200\0373\0200\0200\
\0200\0200\0375\0200\0200\0200\0200\0200"; export UTF8_USR
# Special string for testing a badly formed UTF-8 string
BAD_UTF8="\0337\0377\0357\0377\0377\0367\0377\0377\0377\0373\0377\0377\0377\
\0377\0375\0377\0377\0377\0377\0377\0000\0000";export BAD_UTF8
TUSERUTF8="23456785"; export TUSERUTF8
TUSERBUTF8="23456786"; export TUSERBUTF8

#default compilers and flags
CC_SRV=${CC_SRV:="/opt/SUNWspro/bin/cc"}
cflags_srv=${cflags_srv:=-g}
export CC_SRV cflags_srv

# Current user
USER=${USER:-"$TUSER1"}; export USER

# PATH for framework and testing purposes
PATH=/usr/bin:/usr/sbin:/usr/ucb:${TESTROOT}:.:$PATH; export PATH

# LD_LIBRARY_PATH & TCL_LIBARAY for TCL library and init file
[ "X$LD_LIBRARY_PATH" != "X" ] && \
	LD_LIBRARY_PATH="/usr/lib:$LD_LIBRARY_PATH" || \
	LD_LIBRARY_PATH="/usr/lib"
TCL_LIBRARY=${TCL_LIBRARY:-"$LD_LIBRARY_PATH/tcl8.5"}
export LD_LIBRARY_PATH TCL_LIBRARY

# TRANSPORT to be used to connect to $SERVER
TRANSPORT=${TRANSPORT:-"tcp"}; export TRANSPORT

# MNTPTR to mount BASEDIR on client
MNTPTR=${MNTPTR#$ZONE_PATH}
MNTPTR=$ZONE_PATH${MNTPTR:-"/NFS4_Mnt"}; export MNTPTR

# PORT to be used to connect to $SERVER
PORT=${PORT:-"2049"}; export PORT

# PATH DELIMITER
DELM=${DELM:-"/"}; export DELM

# DONNOT run go_cleanup in runit script if NOCLEANUP flag is set to "1"
NOCLEANUP=${NOCLEANUP:-"0"}; export NOCLEANUP

# Timer of how long (in seconds) to wait for server to reboot and come back up
REBOOTIMER=${REBOOTIMER:-"900"}; export REBOOTIMER

# SERVER's OS
SRVOS=${SRVOS:-"Solaris"}; export SRVOS

# Config file which will be sourced by others if they need 
CONFIGFILE=/var/tmp/nfsv4/config/config.suite; export CONFIGFILE

# Results dir for log files
LOGDIR=${LOGDIR:-"/var/tmp/nfsv4-tests/results"}; export LOGDIR

# Standard test result codes
PASS=0;    		export PASS
FAIL=1;  		export FAIL
UNRESOLVED=2;		export UNRESOLVED
NOTINUSE=3;		export NOTINUSE
UNSUPPORTED=4;		export UNSUPPORTED
UNTESTED=5;		export UNTESTED
UNINITIATED=6;		export UNINITIATED
NORESULT=7;		export NORESULT
WARNING=8;		export WARNING
TIMED_OUT=9;		export TIMED_OUT
OTHER=10;		export OTHER
