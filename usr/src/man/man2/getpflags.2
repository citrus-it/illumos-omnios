.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common
.\" Development and Distribution License (the "License").  You may not use
.\" this file except in compliance with the License. You can obtain a copy
.\" of the license at usr/src/OPENSOLARIS.LICENSE or
.\" http://www.opensolaris.org/os/licensing.
.\"
.\"  See the License for the specific language governing permissions and
.\" limitations under the License. When distributing Covered Code, include
.\" this CDDL HEADER in each file and include the License file at
.\" usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below
.\" this CDDL HEADER, with
.\"
.\" the fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" Copyright 2022 OmniOS Community Edition (OmniOSce) Association.
.\"
.Dd March 4, 2022
.Dt GETPFLAGS 2
.Os
.Sh NAME
.Nm getpflags ,
.Nm setpflags
.Nd get or set process flags
.Sh SYNOPSIS
.In sys/types.h
.In priv.h
.Ft uint_t
.Fo getpflags
.Fa "uint_t flag"
.Fc
.Ft int
.Fo setpflags
.Fa "uint_t flag"
.Fa "uint_t value"
.Fc
.Sh DESCRIPTION
.Fn getpflags
and
.Fn setpflags
obtain and modify the current per-process flags.
.Pp
The following values for
.Fa flag
are supported:
.Bl -tag -width Ds
.It Dv PRIV_AWARE
This one bit flag takes the value of 0
.Pq unset
or 1
.Pq set .
Only if this flag is set is the current process privilege-aware.
A process can attempt to unset this flag but might fail silently if the
observed set invariance condition cannot be met.
Setting this flag is always successful.
See
.Xr privileges 7
for a discussion of this flag.
.It Dv PRIV_AWARE_RESET
This one bit flag takes the value of 0
.Pq unset
or 1
.Pq set .
This causes a process to pretend it is non privilege-aware.
The effective and permitted privilege set change on the change of the effective
uid.
When all the uid sets become the same through
.Xr setuid 2
or through
.Xr setreuid 2 ,
the effective and permitted set are set to the intersection between the limit
set and the inheritable set.
At that point, both
.Dv PRIV_AWARE
and
.Dv PRIV_AWARE_RESET
are unset.
.Pp
This flag gets automatically reset when a file becomes privilege aware, either
through calling
.Xr setppriv 2
or by setting
.Dv PRIV_AWARE
to 1.
.It Dv PRIV_PFEXEC
This one bit flag takes the value of 0
.Pq unset
or 1
.Pq set .
If this flag is set then calls to
.Xr exec 2
trigger lookups in the
.Xr exec_attr 5
database for the current user's profiles and the returned attributes will be
applied to the new process image.
If matches are found in the current user's authenticated profile set, and the
.Dv PRIV_PFEXEC_AUTH
flag is not also set, the user will be prompted to authenticate in order to
proceed.
This flag is inherited by the new process image unless the returned attributes
cause a UID change.
.It Dv PRIV_PFEXEC_AUTH
This one bit flag takes the value of 0
.Pq unset
or 1
.Pq set .
If this flag is set then authentication is not required to apply attributes
from the current user's authenticated profile set.
The
.Dv PRIV_PROC_SETID
privilege is required to set this flag.
This flag is inherited by the new process image unless the returned attributes
cause a UID change.
.It Dv PRIV_DEBUG
This one bit flag takes the value of 0
.Pq unset
or 1
.Pq set .
Only if this flag is set does the current process have privilege debugging
enabled.
Processes can set and unset this flag at will.
.It Dv NET_MAC_AWARE , NET_MAC_AWARE_INHERIT
These flags are available only if the system is configured with Trusted
Extensions.
These one bit flags each take the value of 0
.Pq unset
or 1
.Pq set .
If the
.Dv NET_MAC_AWARE
flag is set then the current process is allowed to communicate with peers at
labels that are different than its own, subject to MAC policy.
.Pp
The
.Dv NET_MAC_AWARE_INHERIT
flag controls the propagation of the
.Dv NET_MAC_AWARE
flag.
When a process performs one of the
.Xr exec 2
functions, the
.Dv NET_MAC_AWARE
flag is unset unless the
.Dv NET_MAC_AWARE_INHERIT
is set.
.Dv NET_MAC_AWARE_INHERIT
is always unset on one of the
.Xr exec 2
functions.
The
.Dv PRIV_NET_MAC_AWARE
privilege is required to set either of these flags.
.El
.Sh RETURN VALUES
.Fn getpflags
returns the value associated with a given per-process flag.
If the
.Fa flag
argument is invalid, \(mi1 is returned and
.Va errno
is set to indicate the error.
.Pp
Upon successful completion,
.Fn setpflags
returns 0.
Otherwise, -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn getpflags
and
.Fn setpflags
will fail if:
.Bl -tag -width Ds
.It Er EINVAL
The value of
.Fa flag
or the value to which the
.Fa flag
is set is out of range.
.El
.Pp
.Fn setpflags
will fail if:
.Bl -tag -width Ds
.It Er EPERM
An attempt was made to unset
.Dv PRIV_AWARE
but the observed set invariance condition was not met.
.It Er EPERM
An attempt was made to set the
.Dv PRIV_PFEXEC_AUTH
flag without the necessary
.Dv PRIV_PROC_SETID
privilege.
.It Er EPERM
An attempt was made to set one of the
.Dv NET_MAC_AWARE
or
.Dv NET_MAC_AWARE_INHERIT
flags witout the necessary
.Dv PRIV_NET_MAC_AWARE
privilege.
.El
.Sh INTERFACE STABILITY
.Sy Committed
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr ppriv 1 ,
.Xr exec 2 ,
.Xr setppriv 2 ,
.Xr setreuid 2 ,
.Xr setuid 2 ,
.Xr attributes 7 ,
.Xr privileges 7
